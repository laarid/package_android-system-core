dist: trusty
sudo: required
services:
- docker
language: cpp

env:
  matrix:
  - BUILD_FLAVOR=amd64_deb
  - BUILD_FLAVOR=amd64_distcheck
  - BUILD_FLAVOR=arm64_deb
  - BUILD_FLAVOR=arm64_distcheck
  - BUILD_FLAVOR=armel_deb
  - BUILD_FLAVOR=armel_distcheck
  - BUILD_FLAVOR=armhf_deb
  - BUILD_FLAVOR=armhf_distcheck
  - BUILD_FLAVOR=i386_deb
  - BUILD_FLAVOR=i386_distcheck
  - BUILD_FLAVOR=mips_deb
  - BUILD_FLAVOR=mips_distcheck
  - BUILD_FLAVOR=mips64el_deb
  - BUILD_FLAVOR=mips64el_distcheck
  - BUILD_FLAVOR=mipsel_deb
  - BUILD_FLAVOR=mipsel_distcheck
  - BUILD_FLAVOR=ppc64el_deb
  - BUILD_FLAVOR=ppc64el_distcheck
  - BUILD_FLAVOR=s390x_deb
  - BUILD_FLAVOR=s390x_distcheck
  global:
  - DOCKER_EXEC_ROOT="sudo docker exec --interactive --tty --user root test_container"
  - DOCKER_EXEC="sudo docker exec --interactive --tty test_container"
  - DOCKER_EXEC_NOTTY="sudo docker exec test_container"
  - BINTRAY_USER=laarid
  - BINTRAY_REPO=main
  - BINTRAY_COMPONENT=main
  - BINTRAY_DESC="Android system core libraries"

matrix:
  fast_finish: true
  allow_failures:
  - env: BUILD_FLAVOR=mips64el_deb
  - env: BUILD_FLAVOR=s390x_deb
  - env: BUILD_FLAVOR=s390x_distcheck

branches:
  only:
  - master
  - /^v\d+\.\d+\.\d+/

addons:
  apt:
    sources:
    - sourceline: 'deb http://archive.ubuntu.com/ubuntu/ devel universe'
    packages:
    - binfmt-support
    - qemu-user-static

cache:
- apt

before_install:
- sudo docker pull laarid/devel:${BUILD_FLAVOR%_*}
- sudo docker images
- |
  sudo docker run --detach --interactive --tty \
    --name test_container \
    -v ${TRAVIS_BUILD_DIR%${TRAVIS_REPO_SLUG}}:${TRAVIS_BUILD_DIR%${TRAVIS_REPO_SLUG}} \
    --add-host dl.bintray.com:$(nslookup dl.bintray.com | grep -m1 -A1 Name: | grep Address: | awk '{print $2}') \
    laarid/devel:${BUILD_FLAVOR%_*} \
    /bin/bash

install:
- ${DOCKER_EXEC_ROOT} apt-get update -qq
- ${DOCKER_EXEC_ROOT} mk-build-deps -i -s sudo -t 'apt-get -o Debug::pkgProblemResolver=yes --no-install-recommends -y --allow-unauthenticated' ${TRAVIS_BUILD_DIR}/debian/control

script:
- case "${BUILD_FLAVOR#*_}" in
    deb)
      ${DOCKER_EXEC} /bin/sh -c "cd ${TRAVIS_BUILD_DIR}; debuild --preserve-env --preserve-envvar PATH --set-envvar=DEB_BUILD_OPTIONS=nocheck -i -us -uc -b";
      ;;
    distcheck)
      ${DOCKER_EXEC} /bin/sh -c "cd ${TRAVIS_BUILD_DIR}; (mkdir build && cd build && autoreconf -i --warnings=all .. && ../configure --build=\$(dpkg-architecture -qDEB_BUILD_GNU_TYPE) --host=\$(dpkg-architecture -qDEB_HOST_GNU_TYPE) --disable-dependency-tracking && make -j \$(nproc) .gitignore distcheck)";
      ;;
  esac
- git status | grep 'working tree clean'

before_deploy:
- |
  cat debian/bintray.json.in | \
    sed -e "s#@BINTRAY_PACKAGE@#$(cat debian/control | grep ^Source: | awk '{print $2}')#g" \
        -e "s#@BINTRAY_USER@#${BINTRAY_USER}#g" \
        -e "s#@BINTRAY_REPO@#${BINTRAY_REPO}#g" \
        -e "s#@BINTRAY_DESC@#${BINTRAY_DESC}#g" \
        -e "s#@GITHUB_REPO@#${TRAVIS_REPO_SLUG}#g" \
        -e "s,@BINTRAY_VERSION@,${TRAVIS_TAG#v},g" \
        -e "s#@BINTRAY_RELEASE_DATE@#$(cat debian/changelog | grep -m 1 '^ -- ' | sed 's,^.*  ,,')#g" \
        -e "s#@BINTRAY_OUTDIR@#$(dirname ${TRAVIS_BUILD_DIR})#g" \
        -e "s#@BINTRAY_POOLABBR@#$(cat debian/control | grep ^Source: | awk '{print $2}' | cut -c1)#g" \
        -e "s#@BINTRAY_SUITE@#$(${DOCKER_EXEC_NOTTY} cat /etc/apt/sources.list | grep -m 1 '^deb ' | awk '{print $3}')#g" \
        -e "s#@BINTRAY_COMPONENT@#${BINTRAY_COMPONENT}#g" \
        -e "s#@BINTRAY_ARCH@#$(${DOCKER_EXEC_NOTTY} dpkg --print-architecture)#g" | \
    tee debian/bintray.json

deploy:
- provider: bintray
  file: debian/bintray.json
  user: vicamo
  key:
    secure: "qZmynoFS3xYdDANotC/PtUNobxs/vakivZ7YxSZsHjSH2KI/9AaLLHqm57Gjh9DgvNu84PnsBnlb8H2aWkwiZuuJpYyLOFV2hUE384oLuOb/84N2P3R9uf+ru0+AjavzrMH2mNQpG6+XS3KNT08a7nBcWTrNSFsV2QGkhb3+BUQnv/SMAP1b3nh/0AcbRe9yGsE9jeQDG6hmZjDH+DjbApIdZ2WWfd4fAyFgqZHoGsN4yOwr41BwVBbXKTxyC1DQxstGazyq1ezNdNTJixVMuHW7qliHuKcUMYeC0PNNGoKI7pRkfI3q0SarkOiVqaOtwWP8u1Y0GZ+5ZLWcN2xmjHH/v4MgvpoIkVUxAto4cWEN7EfAATzV1IvpVxq2EPOgjCxOfqdLI9Qv/paJ7a7AOb/g+dV8brTRP1RJ2OPMrVdt6MKINRLjs0GCXtjkszEwdjv57L/9BgHg0WCQRGMrPMAFKxSlG9H5jfj0hlhMAOgQBsoUmacpdboPiF8fXOMrE9T3CiWmO3KZERbfahUzGj55DTxNt9XaFy7cYPZFEAw6c6t1mtAUyirPaMEZ/UjZHC1tqChJB4+qT+uLAVICq4ihUy7ZA0PUfT/WfyIjxQpXG+yet1tdlXbIOmvgShpPyo1Sc0VUawqFUJlFcLNeYfx2OtDUvggAt5dQLQd2G+8="
  on:
    tags: true
    condition: ${BUILD_FLAVOR#*_} = deb

notifications:
  slack:
    rooms:
    - secure: "RCW5IZrGtLtEoxw4QQld6020IJlX8bjzfoJv69Fm4zKN3gMxLnOgItjOLAQyDFYzNJ4T60aTBrs85Q6T1COJOT52Z4lwvCfCGGNOdV24SAL/Bzy0kRtHx3/9PCo6qRbxH+Am5cfN2ahdqT/eyCcnIZ1q45IlwBHS8LIrsjZV84E5RQE6pzVhtUwWu0izPHJfvzi0z1RJgiUTHJtPfsqTEBqVaY0WkwoJ6fPj8qjnJklt4mYDEFGy5OSy+f2FnQ0F4HKVupfmJlgVVM1L6wyAjYnUIxD3Rd8OfTCs5lrRShCdio37KjDdXKMA5Ol3yVyERgKLswCBoTGutZenLGn1bJiB0y+TZmfYKHsxTJGb+NU+xPCy1yb3xb2kG6Qm3rrVZip8M0SabxaIfTFyecNsv67UJ3Z+ngXDbENE0rNwcyn3RPDW7+tzF7cJIunzQVhQH6xd5aXaBXIidZ9Wpb8BNrbx6/FUV3UK+MTfkiBMCdyR7i+fxcJXBgVAoQPK/evbgFB10VLwZUKxw57GbGsuc0Muu+PUM7wEVAu9vBniAnqu2dNwvQAc8tw8EBPwdApRyvOXnMv9lxW4qm8W27ABH+GBvgEuHz/LB/ShPUo7c6JtcGj+qFlYMNekJqkRI54nsWQL6D2DWyR5wX+KgUJ9J2NP90H9vZIE+RitvWylpAk="
